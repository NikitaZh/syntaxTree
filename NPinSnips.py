# -*- coding: utf8 -*-
#sent_arr = [[['1', 'И', 'и', 'C', 'C', 'C', '0', 'ROOT', '_', '_', '1410'], ['2', 'такая', 'такой', 'P', 'P', 'P--fsna', '3', 'опред', '_', '_', '1412'], ['3', 'оценка', 'оценка', 'N', 'N', 'Ncfsnn', '5', 'предик', '_', '_', '1418'], ['4', 'не', 'не', 'Q', 'Q', 'Q', '5', 'огранич', '_', '_', '1425'], ['5', 'подлежит', 'подлежать', 'V', 'V', 'Vmip3s-a-e', '1', 'соч-союзн', '_', '_', '1428'], ['6', 'никаким', 'никакой', 'P', 'P', 'P--msia', '7', 'опред', '_', '_', '1437'], ['7', 'ревизиям»', 'ревизиям»', 'N', 'N', 'Ncmsin', '5', '1-компл', '_', '_', '000'], ['8', ',', ',', ',', ',', ',', '7', 'PUNC', '_', '_', '1454'], ['9', '—', '—', '-', '-', '-', '10', 'предик', '_', '_', '1456'], ['10', 'отметил', 'отметить', 'V', 'V', 'Vmis-sma-p', '1', 'вводн', '_', '_', '1458'], ['11', 'премьер', 'премьер', 'N', 'N', 'Ncmsny', '10', '1-компл', '_', '_', '1466'], ['12', '.', '.', 'S', 'S', 'SENT', '11', 'PUNC', '_', '_', '1473']], [['1', 'Между', 'между', 'S', 'S', 'Sp-i', '6', 'обст', '_', '_', '1475'], ['2', 'тем', 'то', 'P', 'P', 'P--nsin', '1', 'предл', '_', '_', '1481'], ['3', 'настойчивость', 'настойчивость', 'N', 'N', 'Ncfsnn', '6', 'предик', '_', '_', '1485'], ['4', 'Лужкова', 'лужков', 'N', 'N', 'Npmsgy', '3', 'квазиагент', '_', '_', '1499'], ['5', 'ещё', 'ещё', 'N', 'N', 'Ncmsnn', '6', 'огранич', '_', '_', '1507'], ['6', 'сильнее', 'сильный', 'A', 'A', 'Afcmsnf', '0', 'ROOT', '_', '_', '1511'], ['7', 'распалила', 'распалить', 'V', 'V', 'Vmis-sfa-p', '0', 'ROOT', '_', '_', '1519'], ['8', 'противников', 'противник', 'N', 'N', 'Ncmpay', '7', '1-компл', '_', '_', '1529'], ['9', 'размещения', 'размещение', 'N', 'N', 'Ncnsgn', '8', '1-компл', '_', '_', '1541'], ['10', 'упомянутых', 'упомянуть', 'V', 'V', 'Vmps-p-pfpg', '11', 'опред', '_', '_', '1552'], ['11', 'стендов', 'стенд', 'N', 'N', 'Ncmpgn', '9', '1-компл', '_', '_', '1563'], ['12', '.', '.', 'S', 'S', 'SENT', '11', 'PUNC', '_', '_', '1570']], [['1', 'Столичным', 'столичный', 'A', 'A', 'Afpmpdf', '2', 'опред', '_', '_', '1572'], ['2', 'властям', 'власть', 'N', 'N', 'Ncfpdn', '3', '2-компл', '_', '_', '1582'], ['3', 'обещают', 'обещать', 'V', 'V', 'Vmip3p-a-e', '0', 'ROOT', '_', '_', '1590'], ['4', 'массовые', 'массовый', 'A', 'A', 'Afpmpnf', '5', 'опред', '_', '_', '1598'], ['5', 'митинги', 'митинг', 'N', 'N', 'Ncmpnn', '3', '1-компл', '_', '_', '1607'], ['6', 'протеста', 'протест', 'N', 'N', 'Ncmsgn', '5', '1-компл', '_', '_', '1615'], ['7', 'и', 'и', 'C', 'C', 'C', '5', 'сочин', '_', '_', '1624'], ['8', 'украшение', 'украшение', 'N', 'N', 'Ncnsnn', '7', 'соч-союзн', '_', '_', '1626'], ['9', 'Москвы', 'москва', 'N', 'N', 'Ncfsgn', '8', 'квазиагент', '_', '_', '1636'], ['10', 'баннерами', 'баннер', 'N', 'N', 'Ncmpin', '3', 'обст', '_', '_', '1643'], ['11', 'с', 'с', 'S', 'S', 'Sp-i', '10', 'атриб', '_', '_', '1653'], ['12', 'информацией', 'информация', 'N', 'N', 'Ncfsin', '11', 'предл', '_', '_', '1655'], ['13', 'о', 'о', 'S', 'S', 'Sp-l', '12', '1-компл', '_', '_', '1667'], ['14', 'преступлениях', 'преступление', 'N', 'N', 'Ncnpln', '13', 'предл', '_', '_', '1669'], ['15', 'Сталина', 'сталин', 'N', 'N', 'Npmsgy', '14', 'квазиагент', '_', '_', '1683'], ['16', '.', '.', 'S', 'S', 'SENT', '15', 'PUNC', '_', '_', '1690']], [['1', '«Если', '«если', '-', '-', '-', '12', 'обст', '_', '_', '000'], ['2', 'мэрия', 'мэрия', 'N', 'N', 'Ncfsnn', '3', 'предик', '_', '_', '1698'], ['3', 'хочет', 'хотеть', 'V', 'V', 'Vmip3s-a-e', '1', 'предл', '_', '_', '1704'], ['4', 'развернуть', 'развернуть', 'V', 'V', 'Vmn----a-p', '3', '1-компл', '_', '_', '1710'], ['5', 'на', 'на', 'S', 'S', 'Sp-l', '4', 'обст', '_', '_', '1721'], ['6', 'улицах', 'улица', 'N', 'N', 'Ncfpln', '5', 'предл', '_', '_', '1724'], ['7', 'борьбу', 'борьба', 'N', 'N', 'Ncfsan', '4', '1-компл', '_', '_', '1731'], ['8', 'плакатов', 'плакат', 'N', 'N', 'Ncmpgn', '7', 'квазиагент', '_', '_', '1738'], ['9', ',', ',', ',', ',', ',', '8', 'PUNC', '_', '_', '1746'], ['10', 'она', 'она', 'P', 'P', 'P-3fsnn', '12', 'предик', '_', '_', '1748'], ['11', 'её', 'её', '-', '-', '-', '12', 'вспом', '_', '_', '1752'], ['12', 'получит»', 'получит»', 'N', 'N', 'Ncfsnn', '0', 'ROOT', '_', '_', '000'], ['13', ',', ',', ',', ',', ',', '12', 'PUNC', '_', '_', '1763'], ['14', '—', '—', '-', '-', '-', '0', 'ROOT', '_', '_', '1765'], ['15', 'заявил', 'заявить', 'V', 'V', 'Vmis-sma-p', '0', 'ROOT', '_', '_', '1767'], ['16', 'руководитель', 'руководитель', 'N', 'N', 'Ncmsny', '15', 'предик', '_', '_', '1774'], ['17', 'правозащитного', 'правозащитный', 'A', 'A', 'Afpnsgf', '18', 'опред', '_', '_', '1787'], ['18', 'объединения', 'объединение', 'N', 'N', 'Ncnsgn', '16', '1-компл', '_', '_', '1802'], ['19', '«Мемориал»', '«мемориал»', '-', '-', '-', '18', 'атриб', '_', '_', '000'], ['20', 'Олег', 'олег', 'N', 'N', 'Npmsny', '16', 'аппоз', '_', '_', '1825'], ['21', 'Орлов', 'орлов', 'N', 'N', 'Npmsny', '20', 'аппоз', '_', '_', '1830'], ['22', '.', '.', 'S', 'S', 'SENT', '21', 'PUNC', '_', '_', '1835']], ['10', '1748']]

def NP_connections(s, order=None, reference = None):
    arr = []
    for word in s:
        #word = word.split('\t')
        if order and word[6] == order and word[7] != 'PUNC' and word[7] != 'огранич' and word[3] != 'V':
            if word[5][0] == 'A' and word[5][2] == 'c':
                break
            else:
                arr += word[:2]
                arr.append(word[-1])
                #print(word[-1])
                if word[3] == 'S':
                    arr += NP_connections(s, order=word[0])
                if word[7] == 'сочин':
                    arr += NP_connections(s, order=word[0])
                if word[3] == 'N':
                    arr += NP_connections(s, order=word[0])

        #if reference and word[0] == reference and word[3] != 'V' and word[3] != 'C':
            #arr += word[:2]
            #print(word[:2])
            #arr += NP_connections(s, reference=word[6])

    return arr


def get_noun_phrases(snip):
    '''Возвращает именные группы по заданному снипу(предложения расположены соответствующим образом)'''
    '''Каждый элемент массива начинается с головы ИГ'''
    sent_nps = []
    sentences, deadline = snip[:-1], snip[-1]
    for q in range(len(sentences)):
        noun_count = False
        np = []
        if q != len(sentences):
            for word in sentences[q]:
                #word = word.split('\t')
                orderN, gram, refer2 = word[0], word[3], word[6]
                if gram == 'N':
                    noun_count = True
                    np.append(word[:2])
                    np[-1].append(word[-1])
                    #np[-1].append(word[5]) #добавить грам инфу для головы ИГ
                    np[-1] += NP_connections(sentences[q], orderN, refer2)
        if noun_count is False:
            np.append(['0', 'None', '000'])
        if len(np) > 0:
            sent_nps.append(np)
    return sent_nps


#print(get_noun_phrases(sent_arr))


